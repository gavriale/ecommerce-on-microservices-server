services:
  balance.api:
    build:
      context: C:\Users\sashag\Desktop\test-backend2
      dockerfile: Services/Balance/Balance.API/Dockerfile
    container_name: balanceapi
    depends_on:
      mysqldb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DBHOST: balancedb
    image: balanceapi
    ports:
    - published: 8007
      target: 80
    restart: always
  inventory.api:
    build:
      context: C:\Users\sashag\Desktop\test-backend2
      dockerfile: Services/Inventory/Inventory.API/Dockerfile
    depends_on:
      mysqldb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DBHOST: inventorydb
    image: inventoryapi
    ports:
    - published: 8005
      target: 80
    restart: always
  login.api:
    build:
      context: C:\Users\sashag\Desktop\test-backend2
      dockerfile: Services/Login/Login.API/Dockerfile
    container_name: loginapi
    depends_on:
      mysqldb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DBHOST: userdb
    image: loginapi
    ports:
    - published: 8000
      target: 80
    restart: always
  marketplace.api:
    build:
      context: C:\Users\sashag\Desktop\test-backend2
      dockerfile: Services/Marketplace/Marketplace.API/Dockerfile
    container_name: marketplaceapi
    depends_on:
      mysqldb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DBHOST: marketdb
    image: marketplaceapi
    ports:
    - published: 8001
      target: 80
    restart: always
  mysqldb:
    container_name: mysqldb
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: root
    image: mysql
    restart: always
    volumes:
    - C:\Users\sashag\Desktop\test-backend2\data:/var/lib/mysql:rw
  ocelotapigw:
    build:
      context: C:\Users\sashag\Desktop\test-backend2
      dockerfile: ApiGateways/OcelotApiGateway/Dockerfile
    container_name: ocelotapigw
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    image: ocelotapigw
    ports:
    - published: 5011
      target: 80
  order.api:
    build:
      context: C:\Users\sashag\Desktop\test-backend2
      dockerfile: Services/Order/Order.API/Dockerfile
    container_name: orderapi
    depends_on:
      mysqldb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DBHOST: orderdb
    image: orderapi
    ports:
    - published: 8002
      target: 80
    restart: always
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
    - published: 5672
      target: 5672
    - published: 15672
      target: 15672
    restart: always
  shipping.api:
    build:
      context: C:\Users\sashag\Desktop\test-backend2
      dockerfile: Services/Shipping/Shipping.API/Dockerfile
    container_name: shippingapi
    depends_on:
      mysqldb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DBHOST: shippingdb
    image: shippingapi
    ports:
    - published: 8006
      target: 80
    restart: always
  stock.api:
    build:
      context: C:\Users\sashag\Desktop\test-backend2
      dockerfile: Services/Stock/Stock.API/Dockerfile
    container_name: stockapi
    depends_on:
      mysqldb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DBHOST: stockdb
    image: stockapi
    ports:
    - published: 8004
      target: 80
    restart: always
version: '3.4'